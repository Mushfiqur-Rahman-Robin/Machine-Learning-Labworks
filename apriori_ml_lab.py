# -*- coding: utf-8 -*-
"""apriori_ml_lab

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Lx8keqgme1V1v1CTZwZRFSgCxu_DJRLO
"""

import numpy as np
import pandas as pd


try:
    import apyori
except:
    !pip install apyori

from apyori import apriori

import matplotlib.pyplot as plt
import os
import pickle

stored_data = pd.read_csv('/content/depression_ml.csv', header=None)
stored_data.head()

df_shape = stored_data.shape
no_of_instance = df_shape[0]
n_of_features = df_shape[1]

records = []
for i in range(0, no_of_instance):
    records.append([])
    for j in range(0, n_of_features):
        if (str(stored_data.values[i,j]) != 'nan'):
            records[i].append(str(stored_data.values[i,j]))
        else :
            continue

association_rules = apriori(records, min_support = 0.08, min_confidence = 0.8, min_lift = 3, max_length = 10)
association_results = list(association_rules)

print(len(association_results))  #how many rules were found

merged = stored_data[0]     #get all the values listed in dataset
for i in range(1,n_of_features):
    merged = merged.append(stored_data[i])

ranking = merged.value_counts(ascending=False)  #rank all the unique products

ranked_products = list(ranking.index)   #extract the products in order without their respective count

print(merged)

lookup_table = {}
for item in association_results:

    pair = item[0]  #first index of the inner list
    items = [x for x in pair]
    to_print = "Rule: "
    arrow = " -> "
    for i in range(len(items)):
        to_print += str(items[i]) + arrow
        

    if len(items) < 4:
        items_to_append = items
        i = 0
        while len(items) < 4:
            if ranked_products[i] not in items:
                items_to_append.append(ranked_products[i])
            i += 1
    
    
    lookup_table[items_to_append[0]] =items_to_append[1:]

    print(to_print)

    print("Support: " + str(item[1]))
    print("Confidence: " + str(item[2][0][2]))
    print("Lift: " + str(item[2][0][3]))
    print("=====================================")